/*
 * This file is generated by jOOQ.
 */
package com.vinorsoft.nhanvien.repository.generate.tables;


import com.vinorsoft.nhanvien.repository.generate.Keys;
import com.vinorsoft.nhanvien.repository.generate.NhanVien;
import com.vinorsoft.nhanvien.repository.generate.tables.records.ChucVuRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ChucVu extends TableImpl<ChucVuRecord> {

    /**
     * The reference instance of <code>nhan_vien.chuc_vu</code>
     */
    public static final ChucVu CHUC_VU = new ChucVu();
    private static final long serialVersionUID = 1L;
    /**
     * The column <code>nhan_vien.chuc_vu.chuc_vu_id</code>.
     */
    public final TableField<ChucVuRecord, String> CHUC_VU_ID = createField(DSL.name("chuc_vu_id"), SQLDataType.VARCHAR(255).nullable(false), this, "");
    /**
     * The column <code>nhan_vien.chuc_vu.ten_chuc_vu</code>.
     */
    public final TableField<ChucVuRecord, String> TEN_CHUC_VU = createField(DSL.name("ten_chuc_vu"), SQLDataType.VARCHAR(100).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");
    /**
     * The column <code>nhan_vien.chuc_vu.tham_quyen</code>.
     */
    public final TableField<ChucVuRecord, String> THAM_QUYEN = createField(DSL.name("tham_quyen"), SQLDataType.VARCHAR(100).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    private ChucVu(Name alias, Table<ChucVuRecord> aliased) {
        this(alias, aliased, null);
    }

    private ChucVu(Name alias, Table<ChucVuRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>nhan_vien.chuc_vu</code> table reference
     */
    public ChucVu(String alias) {
        this(DSL.name(alias), CHUC_VU);
    }

    /**
     * Create an aliased <code>nhan_vien.chuc_vu</code> table reference
     */
    public ChucVu(Name alias) {
        this(alias, CHUC_VU);
    }

    /**
     * Create a <code>nhan_vien.chuc_vu</code> table reference
     */
    public ChucVu() {
        this(DSL.name("chuc_vu"), null);
    }

    public <O extends Record> ChucVu(Table<O> child, ForeignKey<O, ChucVuRecord> key) {
        super(child, key, CHUC_VU);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ChucVuRecord> getRecordType() {
        return ChucVuRecord.class;
    }

    @Override
    public Schema getSchema() {
        return NhanVien.NHAN_VIEN;
    }

    @Override
    public UniqueKey<ChucVuRecord> getPrimaryKey() {
        return Keys.KEY_CHUC_VU_PRIMARY;
    }

    @Override
    public List<UniqueKey<ChucVuRecord>> getKeys() {
        return Arrays.<UniqueKey<ChucVuRecord>>asList(Keys.KEY_CHUC_VU_PRIMARY, Keys.KEY_CHUC_VU_UK_8NY3M1SUPV5K5S1SXVHHHO88F);
    }

    @Override
    public ChucVu as(String alias) {
        return new ChucVu(DSL.name(alias), this);
    }

    @Override
    public ChucVu as(Name alias) {
        return new ChucVu(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ChucVu rename(String name) {
        return new ChucVu(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ChucVu rename(Name name) {
        return new ChucVu(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
