buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jooq:jooq:3.14.16"
        classpath "org.jooq:jooq-meta:3.14.16"
        classpath "org.jooq:jooq-codegen:3.14.16"
        classpath 'org.mariadb.jdbc:mariadb-java-client:2.7.2'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.15'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.vinorsoft'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-validation',
            'io.springfox:springfox-boot-starter:3.0.0',
            'io.springfox:springfox-swagger-ui:3.0.0',
            'org.springframework.boot:spring-boot-starter-jooq'
    )

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}


// ------------------------------------------------------------
// XXX: Generate SQL. Should be commented after first run
// ------------------------------------------------------------

import org.jooq.codegen.GenerationTool
import org.jooq.meta.jaxb.*

GenerationTool.generate(new Configuration()

        .withJdbc(new Jdbc()
                .withDriver('org.mariadb.jdbc.Driver')
                .withUrl('jdbc:mariadb://127.0.0.1:3306/nhan_vien')
                .withUser('root')
                .withPassword('123456'))

        .withGenerator(new Generator()
                .withDatabase(new Database()
                        .withName("org.jooq.meta.mysql.MySQLDatabase")
                        .withInputSchema("nhan_vien")
                        .withOutputSchema("nhan_vien")
                )
                .withGenerate(new Generate()
                        .withFluentSetters(true)
                        .withPojos(true)
                        .withDaos(true))
                .withTarget(new Target()
                        .withPackageName('com.vinorsoft.nhanvien.repository.generate')
                        .withDirectory('/home/hieplp/Projects/vinorsoft-hometest/NhanVien/src/main/java'))))